name: Build, test, and publish

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]

jobs:
  build_test_and_publish:
    runs-on: ubuntu-latest
    steps:
    - name: Install .Net Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.103'

    - id: cache-nuget
      name: Cache NuGet
      uses: actions/cache@v1
      with:
        path: ~/.nuget/bin
        key: ${{ runner.os }}-nuget-bin

    - name: Install NuGet
      if: steps.cache-nuget.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/.nuget/bin
        wget https://dist.nuget.org/win-x86-commandline/v5.4.0/nuget.exe -O ~/.nuget/bin/nuget.exe

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Fetch repository for GitVersion
      run: |
        if [[ "$(git rev-parse --is-shallow-repository)" == 'true' ]]; then
          git fetch --prune --unshallow
        else
          git fetch --prune
        fi

    - name: Cache NuGet packages
      uses: actions/cache@v1
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-packages-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-packages-

    - name: Restore NuGet packages
      run: mono ~/.nuget/bin/nuget.exe restore -LockedMode
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_NUGET }}

    - name: Build solution
      run: dotnet build --no-restore --configuration Release

    - name: Test solution
      run: dotnet test --no-build --configuration Release

    - name: Upload code coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.TOKEN_CODECOV }}
        file: coverage.xml

    - name: Package libraries
      if: github.event_name == 'push'
      run: |
        dotnet pack --no-build --configuration Release --output packages
    
    - name: Push packages
      if: github.event_name == 'push'
      run: |
        mono ~/.nuget/bin/nuget.exe push packages/*.nupkg -ConfigFile Boilerplate/csharp/NuGet.config -Source github.com -SkipDuplicate
        mono ~/.nuget/bin/nuget.exe push packages/*.snupkg -ConfigFile Boilerplate/csharp/NuGet.config -Source github.com -SkipDuplicate
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_NUGET }}
